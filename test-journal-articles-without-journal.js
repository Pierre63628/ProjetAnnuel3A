// Script de test pour v√©rifier les articles valid√©s sans journal
import { MongoClient } from 'mongodb';
import dotenv from 'dotenv';

dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/journal?authSource=admin&authMechanism=SCRAM-SHA-1';
const MONGODB_DB = process.env.MONGODB_DB || 'journal';

async function testArticlesWithoutJournal() {
    let client;
    
    try {
        console.log('=== TEST ARTICLES VALID√âS SANS JOURNAL ===');
        
        // Connexion √† MongoDB
        client = new MongoClient(MONGODB_URI);
        await client.connect();
        console.log('‚úÖ Connect√© √† MongoDB');
        
        const db = client.db(MONGODB_DB);
        
        // 1. V√©rifier les articles valid√©s
        const articlesCollection = db.collection('articles');
        
        const allValidatedArticles = await articlesCollection.find({ 
            status: 'valide' 
        }).toArray();
        
        console.log('üìÑ Articles valid√©s totaux:', allValidatedArticles.length);
        
        // 2. Filtrer les articles sans journalId
        const articlesWithoutJournal = allValidatedArticles.filter(article => 
            !article.journalId || article.journalId === null || article.journalId === undefined
        );
        
        console.log('üìÑ Articles valid√©s sans journal:', articlesWithoutJournal.length);
        
        // 3. Afficher les d√©tails des articles sans journal
        if (articlesWithoutJournal.length > 0) {
            console.log('üìã D√©tails des articles sans journal:');
            articlesWithoutJournal.forEach((article, index) => {
                console.log(`${index + 1}. "${article.title}" par ${article.authorName} (${article.category})`);
                console.log(`   Date: ${new Date(article.date).toLocaleDateString('fr-FR')}`);
                console.log(`   journalId: ${article.journalId || 'null'}`);
                console.log('   ---');
            });
        } else {
            console.log('‚ùå Aucun article valid√© sans journal trouv√©');
        }
        
        // 4. V√©rifier les articles avec journalId
        const articlesWithJournal = allValidatedArticles.filter(article => 
            article.journalId && article.journalId !== null && article.journalId !== undefined
        );
        
        console.log('üìÑ Articles valid√©s avec journal:', articlesWithJournal.length);
        
        if (articlesWithJournal.length > 0) {
            console.log('üìã D√©tails des articles avec journal:');
            articlesWithJournal.forEach((article, index) => {
                console.log(`${index + 1}. "${article.title}" par ${article.authorName} (${article.category})`);
                console.log(`   Date: ${new Date(article.date).toLocaleDateString('fr-FR')}`);
                console.log(`   journalId: ${article.journalId}`);
                console.log('   ---');
            });
        }
        
        // 5. Statistiques g√©n√©rales
        console.log('\nüìä Statistiques:');
        console.log(`- Total articles valid√©s: ${allValidatedArticles.length}`);
        console.log(`- Articles sans journal: ${articlesWithoutJournal.length}`);
        console.log(`- Articles avec journal: ${articlesWithJournal.length}`);
        console.log(`- Pourcentage sans journal: ${((articlesWithoutJournal.length / allValidatedArticles.length) * 100).toFixed(1)}%`);
        
        console.log('\n=== TEST TERMIN√â AVEC SUCC√àS ===');
        
    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error);
    } finally {
        if (client) {
            await client.close();
            console.log('üîå Connexion MongoDB ferm√©e');
        }
    }
}

// Ex√©cuter le test
testArticlesWithoutJournal(); 